<div id="main">
  <p class="main_header">Google Calendar</p>

  <!--Add buttons to initiate auth sequence and sign out-->
  <button
    class="main_btn bg-white hover:bg-gray-100 text-gray-800 font-semibold py-2 px-4 border border-gray-400 rounded shadow"
    id="authorize_button" style="display: none;">Log In</button>
  <button
    class="main_btn bg-white hover:bg-gray-100 text-gray-800 font-semibold py-2 px-4 border border-gray-400 rounded shadow"
    id="signout_button" style="display: none;">Sign Out</button>

  <pre id="content" style="white-space: pre-wrap;"></pre>
</div>

<script type="text/javascript">
  const authorizeButton = document.getElementById("authorize_button");
  const signoutButton = document.getElementById("signout_button");
  const CLIENT_ID = "{{clientID}}";
  const API_KEY = "{{apiKey}}";
  const DISCOVERY_DOCS = [
    "https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest"
  ];
  const SCOPES = "https://www.googleapis.com/auth/calendar.readonly";

  function handleClientLoad() {
    gapi.load("client:auth2", initClient);
  }

  function initClient() {
    gapi.client
      .init({
        apiKey: API_KEY,
        clientId: CLIENT_ID,
        discoveryDocs: DISCOVERY_DOCS,
        scope: SCOPES
      })
      .then(
        function () {
          gapi.auth2
            .getAuthInstance()
            .isSignedIn.listen(updateSigninStatus);
          updateSigninStatus(gapi.auth2.getAuthInstance().isSignedIn.get());
          authorizeButton.onclick = handleAuthClick;
          signoutButton.onclick = handleSignoutClick;
        },
        function (error) {
          appendPre(JSON.stringify(error, null, 2));
        }
      );
  }

  function updateSigninStatus(isSignedIn) {
    if (isSignedIn) {
      authorizeButton.style.display = "none";
      signoutButton.style.display = "block";
      listUpcomingEvents();
    } else {
      authorizeButton.style.display = "block";
      signoutButton.style.display = "none";
    }
  }

  function handleAuthClick(event) {
    gapi.auth2.getAuthInstance().signIn();
  }

  function handleSignoutClick(event) {
    gapi.auth2.getAuthInstance().signOut();
  }

  function appendPre(message) {
    const pre = document.getElementById("content");
    const textContent = document.createTextNode(message + "\n");
    pre.appendChild(textContent);
  }

  function listUpcomingEvents() {
    gapi.client.calendar.events
      .list({
        calendarId: "primary",
        timeMin: new Date().toISOString(),
        showDeleted: false,
        singleEvents: true,
        maxResults: 10,
        orderBy: "startTime"
      })
      .then(function (response) {
        const events = response.result.items;
        appendPre("Upcoming events:");

        if (events.length > 0) {
          for (i = 0; i < events.length; i++) {
            const event = events[i];
            const when = event.start.dateTime;
            if (!when) {
              when = event.start.date;
            }
            appendPre(event.summary + " (" + when + ")");
          }
        } else {
          appendPre("No upcoming events found.");
        }
      });
  }
</script>

<script async defer src="https://apis.google.com/js/api.js" onload="this.onload=function(){};handleClientLoad()"
  onreadystatechange="if (this.readyState === 'complete') this.onload()"></script>